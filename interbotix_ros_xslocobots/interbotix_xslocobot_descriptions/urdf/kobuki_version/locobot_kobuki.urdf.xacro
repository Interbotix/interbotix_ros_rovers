<?xml version="1.0" ?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Much of the following Kobuki description is taken from https://github.com/yujinrobot/kobuki/blob/23748ed3dfb082831ca8eaaef1a0b08588dbcb65/kobuki_description/urdf/kobuki.urdf.xacro -->
  <!-- The kobuki_description package is distributed under the 3-Clause BSD License, but no license file was found in the package. -->
  <!-- The license from the kobuki_node package is given from https://github.com/yujinrobot/kobuki/blob/8f2fa7b9e5e98c503ba468602c3a5dd9be68fc26/kobuki_node/LICENSE below: -->
  <!--
    # Software License Agreement (BSD License)
    #
    # Copyright (c) 2012 Yujin Robot, Daniel Stonier, Jorge Santos,
    # Marcus Liebhardt, Younghun Ju, Jihoon Lee
    # All rights reserved.
    #
    # Redistribution and use in source and binary forms, with or without
    # modification, are permitted provided that the following conditions
    # are met:
    #
    #    * Redistributions of source code must retain the above copyright
    #        notice, this list of conditions and the following disclaimer.
    #    * Redistributions in binary form must reproduce the above
    #        copyright notice, this list of conditions and the following
    #        disclaimer in the documentation and/or other materials provided
    #        with the distribution.
    #    * Neither the name of Yujin Robot nor the names of its
    #        contributors may be used to endorse or promote products derived
    #        from this software without specific prior written permission.
    #
    # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    # "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    # LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    # FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    # COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    # INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    # BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    # LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    # CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    # LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
    # ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    # POSSIBILITY OF SUCH DAMAGE.
  -->

  <link name="${robot_name}/base_footprint"/>

  <joint name="base_joint" type="fixed">
    <origin
      rpy="0 0 0"
      xyz="0 0 0.0102"/>
    <parent
      link="${robot_name}/base_footprint"/>
    <child
      link="${robot_name}/base_link"/>
  </joint>

  <link name="${robot_name}/base_link">
    <visual>
      <origin
        rpy="0 0 0"
        xyz="0.001 0 0.05199"/>
      <geometry>
        <mesh
          filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/kobuki_version/kobuki.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin
        rpy="0 0 0"
        xyz="0.0 0 0.05949"/>
      <geometry>
        <cylinder
          length="0.10938"
          radius="0.178"/>
      </geometry>
    </collision>
    <inertial>
      <origin
        rpy="0 0 0"
        xyz="0.01 0 0"/>
      <mass value="2.4"/>
      <inertia
        ixx="0.019995"
        ixy="0.0"
        ixz="0.0"
        iyy="0.019995"
        iyz="0.0"
        izz="0.03675"/>
    </inertial>
  </link>

  <gazebo reference="base_link">
    <mu1>0.3</mu1>
    <mu2>0.3</mu2>
    <sensor type="contact" name="bumpers">
      <always_on>1</always_on>
      <update_rate>50.0</update_rate>
      <visualize>true</visualize>
      <contact>
        <collision>base_footprint</collision>
      </contact>
    </sensor>
  </gazebo>

  <joint name="wheel_left_joint" type="continuous">
    <axis xyz="0 0 1"/>
    <origin
      rpy="-1.57079632679 0 0"
      xyz="0.00 0.115 0.0250"/>
    <parent
      link="${robot_name}/base_link"/>
    <child
      link="${robot_name}/wheel_left_link"/>
  </joint>

  <xacro:if value="${hardware_type == 'gz_classic'}">
    <ros2_control name="wheel_left_joint_controller" type="system">
      <hardware>
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
      </hardware>
      <joint name="wheel_left_joint">
        <state_interface name="velocity" />
        <state_interface name="position" />
        <command_interface name="velocity" />
      </joint>
    </ros2_control>
  </xacro:if>

  <link name="${robot_name}/wheel_left_link">
    <visual>
      <origin
        rpy="0 0 0"
        xyz="0 0 0"/>
      <geometry>
        <mesh
          filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/kobuki_version/kobuki_wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder
          length="0.0206"
          radius="0.0352"/>
      </geometry>
        <origin
          rpy="0 0 0"
          xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin
        xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia
        ixx="0.001"
        ixy="0.0"
        ixz="0.0"
        iyy="0.001"
        iyz="0.0"
        izz="0.001"/>
    </inertial>
  </link>

  <gazebo reference="wheel_left_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <joint name="wheel_right_joint" type="continuous">
    <axis xyz="0 0 1"/>
    <origin
      rpy="-1.57079632679 0 0"
      xyz="0.00 -0.115 0.0250"/>
    <parent
      link="${robot_name}/base_link"/>
    <child
      link="${robot_name}/wheel_right_link"/>
  </joint>

  <xacro:if value="${hardware_type == 'gz_classic'}">
    <ros2_control name="wheel_right_joint_controller" type="system">
      <hardware>
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
      </hardware>
      <joint name="wheel_right_joint">
        <state_interface name="velocity" />
        <state_interface name="position" />
        <command_interface name="velocity" />
      </joint>
    </ros2_control>
  </xacro:if>

  <link name="${robot_name}/wheel_right_link">
    <visual>
      <origin
        rpy="0 0 0"
        xyz="0 0 0"/>
      <geometry>
        <mesh
          filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/kobuki_version/kobuki_wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin
        rpy="0 0 0"
        xyz="0 0 0"/>
      <geometry>
        <cylinder
          length="0.0206"
          radius="0.0350"/>
      </geometry>
    </collision>
    <inertial>
      <origin
        xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia
        ixx="0.001"
        ixy="0.0"
        ixz="0.0"
        iyy="0.001"
        iyz="0.0"
        izz="0.001"/>
    </inertial>
  </link>

  <gazebo reference="wheel_right_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <joint name="caster_front_joint" type="fixed">
    <origin
      rpy="-1.57079632679 0 0"
      xyz="0.115 0.0 0.007"/>
    <parent
      link="${robot_name}/base_link"/>
    <child
      link="${robot_name}/caster_front_link"/>
  </joint>

  <link name="${robot_name}/caster_front_link">
    <collision>
      <origin
        rpy="0 0 0"
        xyz="0 0 0"/>
      <geometry>
        <cylinder
          length="0.0176"
          radius="0.017"/>
      </geometry>
    </collision>
    <inertial>
      <origin
        xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia
        ixx="0.001"
        ixy="0.0"
        ixz="0.0"
        iyy="0.001"
        iyz="0.0"
        izz="0.001"/>
    </inertial>
  </link>

  <gazebo reference="caster_front_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <joint name="caster_back_joint" type="fixed">
    <origin
      rpy="-1.57079632679 0 0"
      xyz="-0.135 0.0 0.009"/>
    <parent
      link="${robot_name}/base_link"/>
    <child
      link="${robot_name}/caster_back_link"/>
  </joint>

  <link name="${robot_name}/caster_back_link">
    <collision>
      <origin
        rpy="0 0 0"
        xyz="0 0 0"/>
      <geometry>
        <cylinder
          length="0.0176"
          radius="0.017"/>
      </geometry>
    </collision>
    <inertial>
      <origin
        xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia
        ixx="0.001"
        ixy="0.0"
        ixz="0.0"
        iyy="0.001"
        iyz="0.0"
        izz="0.001"/>
    </inertial>
  </link>

  <gazebo reference="caster_back_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <joint name="gyro_joint" type="fixed">
    <origin
      rpy="0 0 0"
      xyz="0.056 0.062 0.0202"/>
    <parent
      link="${robot_name}/base_link"/>
    <child
      link="${robot_name}/gyro_link"/>
  </joint>

  <link name="${robot_name}/gyro_link">
    <inertial>
      <origin
        rpy="0 0 0"
        xyz="0 0 0"/>
      <mass value="0.001"/>
      <inertia
        ixx="0.0001"
        ixy="0"
        ixz="0"
        iyy="0.000001"
        iyz="0"
        izz="0.0001"/>
    </inertial>
  </link>

  <gazebo reference="gyro_link">
    <sensor name="imu" type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>false</visualize>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>0.00000196</stddev>
            <!-- 0.25 x 0.25 (deg/s) -->
            <bias_mean>0.0</bias_mean>
            <bias_stddev>0.0</bias_stddev>
          </rate>
          <accel>
            <!-- not used in the plugin and real robot, hence using tutorial values -->
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </sensor>
  </gazebo>

  <joint name="cliff_sensor_left_joint" type="fixed">
    <origin
      rpy="0 1.57079632679 0"
      xyz="0.08734 0.13601 0.0214"/>
    <parent
      link="${robot_name}/base_link"/>
    <child
      link="${robot_name}/cliff_sensor_left_link"/>
  </joint>

  <link name="${robot_name}/cliff_sensor_left_link">
    <inertial>
      <mass value="0.0001"/>
      <origin
        xyz="0 0 0"/>
      <inertia
        ixx="0.0001"
        ixy="0.0"
        ixz="0.0"
        iyy="0.0001"
        iyz="0.0"
        izz="0.0001"/>
    </inertial>
  </link>

  <gazebo reference="cliff_sensor_left_link">
    <sensor name="cliff_sensor_left" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>

  <joint name="cliff_sensor_right_joint" type="fixed">
    <origin
      rpy="0 1.57079632679 0"
      xyz="0.085 -0.13601 0.0214"/>
    <parent
      link="${robot_name}/base_link"/>
    <child
      link="${robot_name}/cliff_sensor_right_link"/>
  </joint>

  <link name="${robot_name}/cliff_sensor_right_link">
    <inertial>
      <origin
        xyz="0 0 0"/>
      <mass value="0.0001"/>
      <inertia
        ixx="0.0001"
        ixy="0.0"
        ixz="0.0"
        iyy="0.0001"
        iyz="0.0"
        izz="0.0001"/>
    </inertial>
  </link>

  <gazebo reference="cliff_sensor_right_link">
    <sensor name="cliff_sensor_right" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>

  <joint name="cliff_sensor_front_joint" type="fixed">
    <origin
      rpy="0 1.57079632679 0"
      xyz="0.156 0.00 0.0214"/>
    <parent
      link="${robot_name}/base_link"/>
    <child
      link="${robot_name}/cliff_sensor_front_link"/>
  </joint>

  <link name="${robot_name}/cliff_sensor_front_link">
    <inertial>
      <mass value="0.0001"/>
      <origin
        xyz="0 0 0"/>
      <inertia
        ixx="0.0001"
        ixy="0.0"
        ixz="0.0"
        iyy="0.0001"
        iyz="0.0"
        izz="0.0001"/>
    </inertial>
  </link>

  <gazebo reference="cliff_sensor_front_link">
    <sensor name="cliff_sensor_front" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>

  <!-- Plugins -->

  <gazebo>
    <!-- Gazebo ROS Control -->
    <xacro:if value="${hardware_type == 'gz_classic'}">
      <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <ros>
          <namespace>/$(arg robot_name)</namespace>
        </ros>
        <robot_param>robot_description</robot_param>
        <robot_param_node>robot_state_publisher</robot_param_node>
        <parameters> $(find interbotix_xslocobot_sim)/config/kobuki_version/$(arg robot_model)_controllers.yaml </parameters>
      </plugin>
    </xacro:if>

    <xacro:if value="${hardware_type == 'gz_ignition'}">
      <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">
        <parameters> $(find interbotix_xslocobot_sim)/config/kobuki_version/$(arg robot_model)_controllers.yaml </parameters>
      </plugin>
    </xacro:if>

    <!-- Ground truth pose -->
    <plugin filename="libgazebo_ros_p3d.so" name="p3d_base_controller">
      <ros>
        <remapping>odom:=sim_ground_truth_pose</remapping>
      </ros>
      <body_name>base_footprint</body_name>
      <frame_name>world</frame_name>
      <update_rate>100.0</update_rate>
      <xyz_offset>0 0 0</xyz_offset>
      <rpy_offset>0.0 0.0 0.0</rpy_offset>
      <gaussian_noise>0</gaussian_noise>
    </plugin>
  </gazebo>

</robot>
