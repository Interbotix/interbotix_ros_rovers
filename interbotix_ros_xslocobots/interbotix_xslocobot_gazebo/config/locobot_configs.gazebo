<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <gazebo>
    <plugin name="gazebo_ros_control"
      filename="libgazebo_ros_control.so">
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

  <!-- ********************************** Arm **********************************  -->

  <gazebo reference="$(arg robot_name)_plate_link">
    <material>Custom/Interbotix</material>
  </gazebo>

  <gazebo reference="$(arg robot_name)_arm_base_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
  </gazebo>

  <gazebo reference="$(arg robot_name)_shoulder_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>

  <gazebo reference="$(arg robot_name)_upper_arm_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>

  <gazebo reference="$(arg robot_name)_forearm_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>

  <gazebo reference="$(arg robot_name)_upper_forearm_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>

  <gazebo reference="$(arg robot_name)_lower_forearm_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>

  <gazebo reference="$(arg robot_name)_wrist_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>

  <gazebo reference="$(arg robot_name)_gripper_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
  </gazebo>

  <gazebo reference="$(arg robot_name)_ar_tag_link">
    <material>Custom/Interbotix</material>
  </gazebo>

  <gazebo reference="$(arg robot_name)_gripper_prop_link">
    <dampingFactor>0.01</dampingFactor>
    <material>Custom/Interbotix</material>
  </gazebo>

  <gazebo reference="$(arg robot_name)_gripper_bar_link">
    <material>Custom/Interbotix</material>
  </gazebo>

  <gazebo reference="$(arg robot_name)_left_finger_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <!-- <mu1>100</mu1>
    <mu2>100</mu2> -->
    <mu1>1000</mu1>
    <mu2>1000</mu2>
    <kp>1000000.0</kp>
    <kd>100000.0</kd>
    <slip1>0</slip1>
    <slip2>0</slip2>
    <minDepth>0.001</minDepth>
    <maxVel>0</maxVel>
    <torsional>
      <ode>
        <coefficient>1000</coefficient>
        <slip>0</slip>
      </ode>
    </torsional>
  </gazebo>

  <gazebo reference="$(arg robot_name)_right_finger_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <!-- <mu1>100.0</mu1>
    <mu2>100.0</mu2> -->
    <mu1>1000</mu1>
    <mu2>1000</mu2>
    <kp>1000000.0</kp>
    <kd>100000.0</kd>
    <slip1>0</slip1>
    <slip2>0</slip2>
    <minDepth>0.001</minDepth>
    <maxVel>0</maxVel>
    <torsional>
      <ode>
        <coefficient>1000</coefficient>
        <slip>0</slip>
      </ode>
    </torsional>
  </gazebo>

  <gazebo reference="$(arg robot_name)_arm_cradle_link">
    <material>Custom/Interbotix</material>
  </gazebo>

  <gazebo reference="arm_base_link_joint">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="plate">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="ar_tag">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="ee_arm">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="gripper_bar">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="ee_bar">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="ee_gripper">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="arm_cradle">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <!-- ********************************** Base **********************************  -->

  <gazebo reference="$(arg robot_name)_battery_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="$(arg robot_name)_camera_tower_link">
    <material>Custom/Interbotix</material>
  </gazebo>

  <gazebo reference="$(arg robot_name)_pan_link">
    <material>Custom/Interbotix</material>
    <self_collide>true</self_collide>
  </gazebo>

  <gazebo reference="$(arg robot_name)_tilt_link">
    <material>Custom/Interbotix</material>
    <self_collide>true</self_collide>
  </gazebo>

  <gazebo reference="$(arg robot_name)_camera_link">
    <material>Gazebo/Grey</material>
    <self_collide>true</self_collide>
  </gazebo>

  <gazebo reference="$(arg robot_name)_lidar_tower_link">
    <material>Custom/Interbotix</material>
  </gazebo>

  <gazebo reference="$(arg robot_name)_laser_frame_link">
    <material>Custom/Interbotix</material>
  </gazebo>

  <gazebo reference="battery">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="camera_tower">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="camera">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="lidar_tower">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <gazebo reference="lidar">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>

  <!-- Kobuki and Camera Gazebo Plugins -->
  <!-- This was copied straight from the Pyrobot Gazebo file. The link names were modified based on
     the ones used in the URDFs, but not sure exactly sure how all these plugins work...-->


  <!-- Adds a dummy link, libgazebo_ros_openni_kinect publishes from frame's z-axis -->
  <!-- https://github.com/ros-simulation/gazebo_ros_pkgs/issues/243 -->
  <joint name="camera_depth_joint"
    type="fixed">
    <origin rpy="${-pi/2} 0 ${-pi/2}"
      xyz="0 0 0"/>
    <parent link="$(arg robot_name)_camera_link"/>
    <child link="$(arg robot_name)_camera_depth_link"/>
  </joint>
  <link name="$(arg robot_name)_camera_depth_link">
    <origin rpy="0 0 0"
      xyz="0 0 0"/>
  </link>

  <gazebo reference="$(arg robot_name)_camera_link">
    <sensor name="camera_frame_sensor"
      type="depth">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>0.994837</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.3</near>
          <far>10.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so"
        name="camera_frame_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <frameName>locobot_camera_optical_link</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Gazebo plugins for the base of the robot -->
  <!--     <gazebo><plugin name="kobuki_controller" filename="libgazebo_ros_kobuki.so"><publish_tf>1</publish_tf><left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name><right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name><wheel_separation>.230</wheel_separation><wheel_diameter>0.070</wheel_diameter><torque>1.0</torque><velocity_command_timeout>0.6</velocity_command_timeout><cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name><cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name><cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name><cliff_detection_threshold>0.04</cliff_detection_threshold><bumper_name>bumpers</bumper_name><imu_name>imu</imu_name></plugin></gazebo>-->

  <gazebo reference="$(arg robot_name)_wheel_left_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="$(arg robot_name)_wheel_right_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="$(arg robot_name)_caster_front_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="$(arg robot_name)_caster_back_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="$(arg robot_name)_cliff_sensor_left_link">
    <sensor name="cliff_sensor_left"
      type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>

  <gazebo reference="$(arg robot_name)_cliff_sensor_right_link">
    <sensor name="cliff_sensor_right"
      type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>

  <gazebo reference="$(arg robot_name)_cliff_sensor_front_link">
    <sensor name="cliff_sensor_front"
      type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>

  <gazebo reference="$(arg robot_name)_base_link">
    <mu1>0.3</mu1>
    <mu2>0.3</mu2>
    <sensor type="contact"
      name="bumpers">
      <always_on>1</always_on>
      <update_rate>50.0</update_rate>
      <visualize>true</visualize>
      <contact>
        <collision>base_footprint</collision>
      </contact>
    </sensor>
  </gazebo>


  <gazebo reference="$(arg robot_name)_gyro_link">
    <sensor name="imu"
      type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>false</visualize>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>0.00000196</stddev>
            <!-- 0.25 x 0.25 (deg/s) -->
            <bias_mean>0.0</bias_mean>
            <bias_stddev>0.0</bias_stddev>
          </rate>
          <accel>
            <!-- not used in the plugin and real robot, hence using tutorial values -->
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </sensor>
  </gazebo>

  <!-- <gazebo>
    <plugin name="kobuki_controller" filename="libgazebo_ros_kobuki.so">
      <publish_tf>1</publish_tf>
      <publish_joint_states>0</publish_joint_states>
      <left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name>
      <right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name>
      <wheel_separation>.230</wheel_separation>
      <wheel_diameter>0.070</wheel_diameter>
      <torque>1.0</torque>
      <velocity_command_timeout>0.6</velocity_command_timeout>
      <cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name>
      <cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name>
      <cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name>
      <cliff_detection_threshold>0.04</cliff_detection_threshold>
      <bumper_name>bumpers</bumper_name>
      <robotNamespace>/base</robotNamespace>
      <imu_name>imu</imu_name>
    </plugin>
  </gazebo> -->

  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so"
      name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.230</wheelSeparation>
      <wheelDiameter>0.070</wheelDiameter>
      <wheelTorque>1.0</wheelTorque>
      <wheelAcceleration>0</wheelAcceleration>
      <commandTopic>mobile_base/commands/velocity</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelJointState>true</publishWheelJointState>
      <rosDebugLevel>na</rosDebugLevel>
      <publishWheelTF>false</publishWheelTF>
      <publishOdomTF>false</publishOdomTF>
      <odometrySource>world</odometrySource>
      <publishTf>1</publishTf>
    </plugin>

    <plugin filename="libgazebo_ros_p3d.so"
      name="p3d_base_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <bodyName>$(arg robot_name)_base_link</bodyName>
      <topicName>base/absolute_position</topicName>
      <gaussianNoise>0</gaussianNoise>
      <frameName>map</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
      <!--<interface:position name="p3d_base_position"/>-->
    </plugin>
  </gazebo>

  <!-- RPLIDAR-A2 -->
  <gazebo reference="$(arg robot_name)_laser_frame_link">
    <sensor type="ray"
      name="rplidar">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>400</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>16.0</max>
          <resolution>0.02</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller"
        filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>$(arg robot_name)_laser_frame_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>
