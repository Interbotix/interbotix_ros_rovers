slam_toolbox:
    ros__parameters:
        # Solver Params

        test_param: test

        # The type of nonlinear solver to utilize for karto's scan solver. Options:
        # `solver_plugins::CeresSolver`, `solver_plugins::SpaSolver`, `solver_plugins::G2oSolver`.
        # Default: `solver_plugins::CeresSolver`.
        solver_plugin: solver_plugins::CeresSolver

        # The linear solver for Ceres to use. Options: `SPARSE_NORMAL_CHOLESKY`, `SPARSE_SCHUR`,
        # `ITERATIVE_SCHUR`, `CGNR`. Defaults to `SPARSE_NORMAL_CHOLESKY`.
        ceres_linear_solver: SPARSE_NORMAL_CHOLESKY

        # The preconditioner to use with that solver. Options: `JACOBI`, `IDENTITY` (none),
        # `SCHUR_JACOBI`. Defaults to `JACOBI`.
        ceres_preconditioner: SCHUR_JACOBI

        # The trust region strategy. Line search strategies are not exposed because they perform
        # poorly for this use. Options: `LEVENBERG_MARQUARDT`, `DOGLEG`. Default:
        # `LEVENBERG_MARQUARDT`.
        ceres_trust_strategy: LEVENBERG_MARQUARDT

        # The dogleg strategy to use if the trust strategy is `DOGLEG`. Options: `TRADITIONAL_DOGLEG`,
        # `SUBSPACE_DOGLEG`. Default: `TRADITIONAL_DOGLEG`
        ceres_dogleg_type: TRADITIONAL_DOGLEG

        # The type of loss function to reject outlier measurements. None is equatable to a squared
        # loss. Options: `None`, `HuberLoss`, `CauchyLoss`. Default: `None`.
        ceres_loss_function: None

        # "mapping" or "localization" mode for performance optimizations in the Ceres problem creation
        mode: mapping

        # Toolbox Params

        # Odometry frame
        odom_frame: locobot/odom

        # Map frame
        map_frame: map

        # Base frame
        base_frame: locobot/base_footprint

        # scan topic, *absolute* path, ei `/scan` not `scan`
        scan_topic: /locobot/scan

        # if you'd like to immediately start continuing a map at a given pose
        # or at the dock, but they are mutually exclusive, if pose is given
        # will use pose
        #map_file_name: map_file
        # map_start_pose: [0.0, 0.0, 0.0]
        #map_start_at_dock: true

        debug_logging: false
        throttle_scans: 1
        transform_publish_period: 0.02 #if 0 never publishes odometry
        map_update_interval: 5.0
        resolution: 0.05
        max_laser_range: 16.0 #for rastering images
        minimum_time_interval: 0.5
        transform_timeout: 0.2
        tf_buffer_duration: 30.
        stack_size_to_use: 40000000 #// program needs a larger stack size to serialize large maps
        enable_interactive_mode: true

        # General Parameters
        use_scan_matching: true
        use_scan_barycenter: true
        minimum_travel_distance: 0.5
        minimum_travel_heading: 0.5
        scan_buffer_size: 10
        scan_buffer_maximum_scan_distance: 10.0
        link_match_minimum_response_fine: 0.1
        link_scan_maximum_distance: 1.5
        loop_search_maximum_distance: 3.0
        do_loop_closing: true
        loop_match_minimum_chain_size: 10
        loop_match_maximum_variance_coarse: 3.0
        loop_match_minimum_response_coarse: 0.35
        loop_match_minimum_response_fine: 0.45

        # Correlation Parameters - Correlation Parameters
        correlation_search_space_dimension: 0.5
        correlation_search_space_resolution: 0.01
        correlation_search_space_smear_deviation: 0.1

        # Correlation Parameters - Loop Closure Parameters
        loop_search_space_dimension: 8.0
        loop_search_space_resolution: 0.05
        loop_search_space_smear_deviation: 0.03

        # Scan Matcher Parameters
        distance_variance_penalty: 0.5
        angle_variance_penalty: 1.0

        fine_search_angle_offset: 0.00349
        coarse_search_angle_offset: 0.349
        coarse_angle_resolution: 0.0349
        minimum_angle_penalty: 0.9
        minimum_distance_penalty: 0.5
        use_response_expansion: true
